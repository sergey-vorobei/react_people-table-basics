{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","peopleSlug","useParams","name","sex","born","died","fatherName","motherName","currentRow","slug","woman","isMother","isFather","classNames","to","mother","father","PeopleTable","people","newPeople","map","newPerson","find","el","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","isLoader","setIsLoader","isError","setIsError","setPeople","useEffect","catch","finally","length","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c5a03d2e.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { peopleSlug } = useParams();\n\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  } = person;\n\n  const currentRow = slug === peopleSlug;\n  // const parentsName = (\n  //   (fatherName || motherName) ? peopleSlug?.split('-')\n  //     .slice(0, 2)\n  //     .join(' ') === person.name.toLowerCase() : false\n  // );\n\n  // const handleClickParents = () => {\n  //   setParentsName()\n  // }\n\n  const woman = person.sex === 'f';\n  const isMother = motherName || '-';\n  const isFather = fatherName || '-';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': currentRow,\n      })}\n\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={classNames({\n            'has-text-danger': woman,\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {person.mother ? (\n          <Link\n            to={`/people/${person.mother?.slug}`}\n            className={classNames({\n              'has-text-danger': isMother,\n            })}\n          >\n            {isMother}\n          </Link>\n        ) : (\n          `${isMother}`\n        )}\n      </td>\n      <td>\n        {person.father ? (\n          <Link\n            to={`/people/${person.father.slug}`}\n          >\n            {isFather}\n          </Link>\n        ) : (\n          `${isFather}`\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const newPeople = people.map((person: Person) => {\n    const newPerson: Person = { ...person };\n\n    const mother = people.find((el) => el.name === person.motherName);\n\n    if (mother) {\n      newPerson.mother = mother;\n    }\n\n    const father = people.find((el) => el.name === person.fatherName);\n\n    if (father) {\n      newPerson.father = father;\n    }\n\n    return newPerson;\n  });\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {newPeople.map((person: Person) => (\n          <PersonLink person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\n\nexport const PeoplePage: FC = () => {\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    setIsError(false);\n    setIsLoader(true);\n    getPeople()\n      // .then(() => setPeople([]))\n      .then(setPeople)\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoader(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoader ? (\n            <Loader />\n          ) : (\n            <>\n              {isError ? (\n                <p\n                  data-cy=\"peopleLoadingError\"\n                  className=\"has-text-danger\"\n                >\n                  Something went wrong\n                </p>\n              ) : (\n                <>\n                  {!people.length ? (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  ) : (\n                    <PeopleTable people={people} />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport {\n  Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <h1 className=\"title\">Home Page</h1>\n              }\n            />\n\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route path=\"people\">\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n\n              <Route\n                path=\":peopleSlug\"\n                element={<PeoplePage />}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}